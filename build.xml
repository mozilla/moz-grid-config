<project name="selenium-grid" default="launch-node" basedir=".">

  <property environment="env"/>
  <exec executable="hostname" osfamily="unix" failifexecutionfails="false" outputproperty="env.COMPUTERNAME"/>
  <property name="env.HOSTNAME" value="${env.COMPUTERNAME}"/> <!-- Windows vs. Linux -->

  <property file="${basedir}/${env.HOSTNAME}.properties" />
  <property file="${basedir}/default.properties"/>

  <target name="fetch-dependencies">
    <mkdir dir="lib"/>
    <get src="http://selenium.googlecode.com/files/selenium-server-standalone-${selenium.version}.jar"
         dest="lib"
         usetimestamp="true"/>
  </target>

  <target name="set-hosts">
    <condition property="hub.host" value="${mozilla.hub.host}">
      <or>
        <matches pattern="qa\-selenium[0-9]*\.mv\.mozilla\.com" string="${env.HOSTNAME}"/>
        <matches pattern="qa[0-9]*\-\w+" string="${env.HOSTNAME}" casesensitive="false"/>
      </or>
    </condition>
    <property name="hub.host" value="localhost"/>
    <property name="node.host" value="localhost"/>
    <echo>hub.host: ${hub.host}</echo>
    <echo>node.host: ${node.host}</echo>
  </target>

  <path id="selenium.classpath">
    <pathelement path="${basedir}/"/>
    <fileset dir="${basedir}/lib">
      <include name="selenium-server-standalone-${selenium.version}.jar"/>
    </fileset>
    <pathelement path="${java.class.path}/"/>
  </path>

  <!-- Debug target to show variables -->
  <target name="debug">
    <echoproperties/>
  </target>

  <target name="launch-hub"
          description="Launch Selenium Hub"
          depends="fetch-dependencies">
    <java classname="org.openqa.grid.selenium.GridLauncher"
          classpathref="selenium.classpath"
          fork="true"
          failonerror="true">
      <arg value="-role"/>
      <arg value="hub"/>
      <arg value="-grid1Yml"/>
      <arg value="grid_configuration.yml"/>
      <arg value="-hubConfig"/>
      <arg value="hub_configuration.json"/>
    </java>
  </target>

  <target name="launch-node"
          description="Launch Selenium Node"
          depends="fetch-dependencies, set-hosts, launch-node-with-custom-profile, launch-node-without-custom-profile"/>

  <target name="check-for-custom-profile">
    <condition property="use.custom.profile">
      <not>
        <equals arg1="${custom.firefox.profile}" arg2="" />
      </not>
    </condition>
  </target>

  <target name="launch-node-with-custom-profile"
          depends="set-hosts, check-for-custom-profile"
          if="use.custom.profile">
    <java classpathref="selenium.classpath"
          classname="org.openqa.grid.selenium.GridLauncher"
          fork="true"
          failonerror="true">
      <arg value="-role"/>
      <arg value="node"/>
      <arg value="-hub"/>
      <arg value="http://${hub.host}:${hub.port}/grid/register"/>
      <arg value="-host"/>
      <arg value="${node.host}"/>
      <arg value="-nodeConfig"/>
      <arg value="${node.configuration.file}"/>
      <arg value="-firefoxProfileTemplate"/>
      <arg value="${basedir}${file.separator}firefoxprofiles${file.separator}${custom.firefox.profile}"/>
      <arg line="${rc.arguments}"/>
    </java>
  </target>

  <target name="launch-node-without-custom-profile"
          depends="set-hosts, check-for-custom-profile"
          unless="use.custom.profile">
    <java classpathref="remote-control.classpath"
          classname="org.openqa.grid.selenium.GridLauncher"
          fork="true"
          failonerror="true">
      <arg value="-role"/>
      <arg value="node"/>
      <arg value="-hub"/>
      <arg value="http://${hub.host}:${hub.port}/grid/register"/>
      <arg value="-host"/>
      <arg value="${node.host}"/>
      <arg value="-nodeConfig"/>
      <arg value="${node.configuration.file}"/>
      <arg line="${rc.arguments}"/>
    </java>
  </target>

</project>
